{"ast":null,"code":"import { mapFieldCoords } from './fieldMap';\nexport const POSITION_ZONES = {\n  Goalkeeper: {\n    y: 100,\n    xStart: 20,\n    xEnd: 60\n  },\n  'Center Back': {\n    y: 75,\n    xStart: -13,\n    xEnd: 92\n  },\n  'Full Back': {\n    y: 86,\n    xStart: -77,\n    xEnd: 92\n  },\n  'Wing Back': {\n    y: 63,\n    xStart: -95,\n    xEnd: 98\n  },\n  'Defensive Midfielder': {\n    y: 60,\n    xStart: 20,\n    xEnd: 60\n  },\n  'Central Midfielder': {\n    y: 50,\n    xStart: -8,\n    xEnd: 70\n  },\n  'Attacking Midfielder': {\n    y: 38,\n    xStart: 11,\n    xEnd: 70\n  },\n  Winger: {\n    y: 25,\n    xStart: -17,\n    xEnd: 90\n  },\n  Striker: {\n    y: 16,\n    xStart: 10,\n    xEnd: 60\n  }\n};\nexport function generateDynamicPositionCoords(position, count) {\n  const zone = POSITION_ZONES[position];\n  if (!zone) return Array(count).fill(mapFieldCoords(50, 50));\n  const {\n    y,\n    xStart,\n    xEnd\n  } = zone;\n  const spacing = (xEnd - xStart) / Math.max(count);\n  return Array.from({\n    length: count\n  }, (_, index) => {\n    const x = xStart + spacing * (index + 1);\n    return mapFieldCoords(x, y);\n  });\n}","map":{"version":3,"names":["mapFieldCoords","POSITION_ZONES","Goalkeeper","y","xStart","xEnd","Winger","Striker","generateDynamicPositionCoords","position","count","zone","Array","fill","spacing","Math","max","from","length","_","index","x"],"sources":["C:/Users/Prateek/OneDrive/Desktop/Trial 2/football-field/src/positionCoords.js"],"sourcesContent":["import { mapFieldCoords } from './fieldMap';\r\n\r\nexport const POSITION_ZONES = {\r\n  Goalkeeper: { y: 100, xStart: 20, xEnd: 60 },\r\n  'Center Back': { y: 75, xStart: -13, xEnd: 92 },\r\n  'Full Back': { y: 86, xStart: -77, xEnd: 92 },\r\n  'Wing Back': { y: 63, xStart:-95, xEnd: 98 },\r\n  'Defensive Midfielder': { y: 60, xStart: 20, xEnd: 60 },\r\n  'Central Midfielder': { y: 50, xStart: -8, xEnd: 70 },\r\n  'Attacking Midfielder': { y: 38, xStart: 11, xEnd: 70 },\r\n  Winger: { y: 25, xStart: -17, xEnd: 90 },\r\n  Striker: { y: 16, xStart: 10, xEnd: 60 }\r\n};\r\n\r\nexport function generateDynamicPositionCoords(position, count) {\r\n  const zone = POSITION_ZONES[position];\r\n  if (!zone) return Array(count).fill(mapFieldCoords(50, 50));\r\n\r\n  const { y, xStart, xEnd } = zone;\r\n  const spacing = (xEnd - xStart) / Math.max(count); \r\n\r\n  return Array.from({ length: count }, (_, index) => {\r\n    const x = xStart + spacing * (index + 1);\r\n    return mapFieldCoords(x, y );\r\n  });\r\n}\r\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,YAAY;AAE3C,OAAO,MAAMC,cAAc,GAAG;EAC5BC,UAAU,EAAE;IAAEC,CAAC,EAAE,GAAG;IAAEC,MAAM,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC;EAC5C,aAAa,EAAE;IAAEF,CAAC,EAAE,EAAE;IAAEC,MAAM,EAAE,CAAC,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC;EAC/C,WAAW,EAAE;IAAEF,CAAC,EAAE,EAAE;IAAEC,MAAM,EAAE,CAAC,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC;EAC7C,WAAW,EAAE;IAAEF,CAAC,EAAE,EAAE;IAAEC,MAAM,EAAC,CAAC,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC;EAC5C,sBAAsB,EAAE;IAAEF,CAAC,EAAE,EAAE;IAAEC,MAAM,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC;EACvD,oBAAoB,EAAE;IAAEF,CAAC,EAAE,EAAE;IAAEC,MAAM,EAAE,CAAC,CAAC;IAAEC,IAAI,EAAE;EAAG,CAAC;EACrD,sBAAsB,EAAE;IAAEF,CAAC,EAAE,EAAE;IAAEC,MAAM,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC;EACvDC,MAAM,EAAE;IAAEH,CAAC,EAAE,EAAE;IAAEC,MAAM,EAAE,CAAC,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC;EACxCE,OAAO,EAAE;IAAEJ,CAAC,EAAE,EAAE;IAAEC,MAAM,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG;AACzC,CAAC;AAED,OAAO,SAASG,6BAA6BA,CAACC,QAAQ,EAAEC,KAAK,EAAE;EAC7D,MAAMC,IAAI,GAAGV,cAAc,CAACQ,QAAQ,CAAC;EACrC,IAAI,CAACE,IAAI,EAAE,OAAOC,KAAK,CAACF,KAAK,CAAC,CAACG,IAAI,CAACb,cAAc,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;EAE3D,MAAM;IAAEG,CAAC;IAAEC,MAAM;IAAEC;EAAK,CAAC,GAAGM,IAAI;EAChC,MAAMG,OAAO,GAAG,CAACT,IAAI,GAAGD,MAAM,IAAIW,IAAI,CAACC,GAAG,CAACN,KAAK,CAAC;EAEjD,OAAOE,KAAK,CAACK,IAAI,CAAC;IAAEC,MAAM,EAAER;EAAM,CAAC,EAAE,CAACS,CAAC,EAAEC,KAAK,KAAK;IACjD,MAAMC,CAAC,GAAGjB,MAAM,GAAGU,OAAO,IAAIM,KAAK,GAAG,CAAC,CAAC;IACxC,OAAOpB,cAAc,CAACqB,CAAC,EAAElB,CAAE,CAAC;EAC9B,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}